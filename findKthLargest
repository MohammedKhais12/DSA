class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) {
        // Use a min-heap to keep track of k largest elements
        priority_queue<int, vector<int>, greater<int>> minHeap;

        for (int n : nums) {
            minHeap.push(n);
            if (minHeap.size() > k) {
                minHeap.pop(); // remove smallest to keep size = k
            }
        }

        // The root (top) of the heap is the kth largest element
        return minHeap.top();
    }
};
