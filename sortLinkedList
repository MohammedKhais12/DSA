/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* sortList(ListNode* head) {
        vector <int> vec;
        ListNode* temp = head;
        while(temp!=NULL){
            vec.push_back(temp->val);
            temp = temp->next;
        }
        sort(vec.begin(), vec.end());
        ListNode* head1 = nullptr;
        ListNode* tail1 = nullptr;
        for(int i=0; i<vec.size(); i++){
            ListNode* newNode = new ListNode(vec[i]);
            if(head1==nullptr){
                head1 = newNode;
                tail1 = newNode;
            }
            else {
                tail1->next = newNode;
                tail1 = tail1->next;
            }
        }
        return head1;
    }
};
