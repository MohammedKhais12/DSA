class Solution {
public:
    const long long MOD = 1e9 + 7;

    // Fast exponentiation (simple version)
    long long power(long long base, long long exp) {
        long long result = 1;
        base %= MOD;

        while (exp > 0) {
            if (exp % 2 == 1)  // if exp is odd
                result = (result * base) % MOD;
            
            base = (base * base) % MOD;  // square the base
            exp /= 2;  // divide exponent by 2
        }
        return result;
    }

    int countGoodNumbers(long long n) {
        long long even = (n + 1) / 2; // ceil(n/2)
        long long odd  = n / 2;       // floor(n/2)

        long long ans = (power(5, even) * power(4, odd)) % MOD;
        return (int)ans;
    }
};
