class Solution {
public:
    int maxArea(vector<int>& height) {
        // int h;
        // int w;
        // int maxWater = 0;
        // int l, r, finalWater;

        // for(int i=0; i<height.size()-1; i++){
        //     for(int j = i+1; j< height.size(); j++){
        //         l = height[i];
        //         r = height[j];
        //         w = j - i;
        //         h = min(l, r);
        //         finalWater = w * h;
        //         if(maxWater < finalWater){
        //             maxWater = finalWater;
        //         }
        //     }
        // }
        // return maxWater;

        int l = 0;
        int n = height.size();
        int r = n-1;
        int currentWater;
        int maxWater=0;
        int h, w ;

        while(l<r){
            w = r - l;
            int a = min(height[l], height[r]);
            currentWater = w * a;
            maxWater = max(maxWater, currentWater);
            height[l]<height[r]?l++:r--;
        }
        return maxWater;
    }
};
