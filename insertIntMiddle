class Solution {
public:
    Node* insertInMiddle(Node* head, int x) {
        // Handle empty list
        if (head == NULL) {
            return new Node(x);
        }

        // Step 1: Count the number of nodes
        int count = 0;
        Node* temp = head;
        while (temp != NULL) {
            count++;
            temp = temp->next;
        }

        // Step 2: Find middle position
        int mid = (count - 1) / 2;  // insert after this node

        // Step 3: Traverse to middle node
        temp = head;
        for (int i = 0; i < mid; i++) {
            temp = temp->next;
        }

        // Step 4: Insert new node
        Node* newNode = new Node(x);
        newNode->next = temp->next;
        temp->next = newNode;

        return head;
    }
};
